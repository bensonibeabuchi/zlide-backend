openapi: 3.0.3
info:
  title: Zlide
  version: 1.0.0
  description: A web-based software solution designed to streamline the process of
    creating PowerPoint presentations using AI
paths:
  /api/activate/:
    post:
      operationId: Activate user using OTP
      description: This endpoint activates a user using OTP
      summary: This endpoint is used to activate a user using the OTP sent to their
        email.
      tags:
      - activate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/blog/:
    get:
      operationId: List all Blog post
      description: This endpoint lists all single Blog post
      summary: This endpoint lists all Blog post
      tags:
      - blog
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    post:
      operationId: Creates a single Blog post
      description: This endpoint creates a single Blog and saves it to the database
      summary: This endpoint creates a single Blog and saves it to the database
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
  /api/blog/{slug}/:
    get:
      operationId: Retrieves a single Blog object by its slug
      description: This endpoint retrieves a single Blog from the database using slug
        as the unique identifier
      summary: This endpoint retrieves a single Blog from the database using slug
        as the unique identifier
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - blog
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    put:
      operationId: Updates a single Blog object by its slug
      description: This endpoint updates a single Blog from the database using slug
        as the unique identifier
      summary: This endpoint updates a single Blog from the database using slug as
        the unique identifier
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Blog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Blog'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
    delete:
      operationId: Delete a single Blog object by its slug
      description: This endpoint deletes a single Blog from the database using slug
        as the unique identifier
      summary: This endpoint deletes a single Blog from the database using slug as
        the unique identifier
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - blog
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blog'
          description: ''
  /api/jwt/refresh/:
    post:
      operationId: Refresh JWT Token
      description: This endpoint refreshes the JWT Token
      summary: This endpoint is used to refresh the JWT Token. The Token is then stored
        using http cookies automatically
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/jwt/verify/:
    post:
      operationId: Verify JWT Token
      description: This endpoint verifies the JWT Token
      summary: This endpoint is used to verify the JWT Token. The Token is then stored
        using http cookies automatically
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/login/:
    post:
      operationId: Login with JWT Token
      description: This endpoint is used to Login with with JWT Token
      summary: This endpoint is used to Login with JWT Token. The Token is stored
        using http cookies automatically
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/logout/:
    post:
      operationId: Logout Endpoint
      description: This endpoint logs out the user by deleting the cookie from the
        browser.
      summary: This endpoint logs out the user by deleting the cookie from the browser.
      tags:
      - logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/o/{provider}/:
    get:
      operationId: This endpoint is used to GET Google OAuth2/Facebook Authorization
        url
      description: This endpoint is used to GET Google OAuth2/Facebook Authorization
        url
      summary: This endpoint is used to GET Google OAuth2/Facebook Authorization url
      parameters:
      - in: path
        name: provider
        schema:
          type: string
          pattern: ^\S+$
        required: true
      tags:
      - o
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderAuth'
          description: ''
    post:
      operationId: Google/Facebook Authentication
      description: This endpoint is used to Login with Google/Facebook
      summary: This endpoint is used to Login with Google/Facebook
      parameters:
      - in: path
        name: provider
        schema:
          type: string
          pattern: ^\S+$
        required: true
      tags:
      - o
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/presentation/generate-slides/:
    get:
      operationId: presentation_generate_slides_list
      tags:
      - presentation
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Zlide'
          description: ''
    post:
      operationId: presentation_generate_slides_create
      tags:
      - presentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zlide'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zlide'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zlide'
          description: ''
  /api/presentation/zlide/{id}/:
    get:
      operationId: Retrieve a Zlide object by its ID
      description: Retrieve a Zlide object by its ID
      summary: Retrieve a Zlide object by its ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - presentation
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zlide'
          description: ''
    put:
      operationId: Update an entire Zlide object
      description: Update an entire Zlide object by its ID.
      summary: Update an entire Zlide object by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - presentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Zlide'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Zlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Zlide'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zlide'
          description: ''
    patch:
      operationId: Update a Zlide object
      description: Update a Zlide object by its ID.
      summary: Update a Zlide object by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - presentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedZlide'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedZlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedZlide'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zlide'
          description: ''
    delete:
      operationId: Delete a Zlide object
      description: Delete a Zlide object by its ID.
      summary: Delete a Zlide object by its ID.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - presentation
      security:
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zlide'
          description: ''
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/resend-otp/:
    post:
      operationId: Resend OTP to user
      description: This endpoint resends OTP to user
      summary: This endpoint is used to resend OTP to user provided they have their
        email address.
      tags:
      - resend-otp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/testimonial/:
    get:
      operationId: List Testimonials
      description: This endpoint lists all the Testimonial in the database
      summary: This endpoint lists all the Testimonial in the database
      tags:
      - testimonial
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
    post:
      operationId: Create Testimonials
      description: This endpoint creates a new testimonial and saves it in the database
      summary: This endpoint creates a new testimonial and saves it in the database
      parameters:
      - in: query
        name: rating
        schema:
          type: string
        description: User Rating
        required: true
      - in: query
        name: review
        schema:
          type: string
        description: User Review
        required: true
      tags:
      - testimonial
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: {}
          multipart/form-data:
            schema:
              type: object
              additionalProperties: {}
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
  /api/testimonial/{id}/:
    get:
      operationId: Retrieve a single Testimonial object by its ID
      description: This endpoint retrieves a single Testimonial from the database
        using id as the unique identifier
      summary: This endpoint retrieves a single Testimonial from the database using
        id as the unique identifier
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testimonial
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
    put:
      operationId: Update a single Testimonial object by its ID
      description: This endpoint updates a single Testimonial from the database using
        id as the unique identifier
      summary: This endpoint updates a single Testimonial from the database using
        id as the unique identifier
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testimonial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Testimonial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Testimonial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Testimonial'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
    delete:
      operationId: Delete a single Testimonial object by its ID
      description: This endpoint deletes a single Testimonial from the database using
        id as the unique identifier
      summary: This endpoint deletes a single Testimonial from the database using
        id as the unique identifier
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - testimonial
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Testimonial'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCreate'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this custom user.
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
  /api/users/reset_password/:
    post:
      operationId: Reset Password
      description: This endpoint is used to reset password
      summary: This endpoint is used to reset password
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/reset_password_confirm/:
    post:
      operationId: Reset Password Confirmation
      description: This endpoint is used to reset password confirmation
      summary: This endpoint is used to reset password confirmation
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRetype'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
components:
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        content:
          type: string
        image:
          type: string
          format: uri
        slug:
          type: string
          maxLength: 1000
          pattern: ^[-a-zA-Z0-9_]+$
        date_posted:
          type: string
          format: date
          readOnly: true
        author:
          type: integer
      required:
      - content
      - date_posted
      - id
      - slug
      - title
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        job_title:
          type: string
          nullable: true
          maxLength: 255
        company:
          type: string
          nullable: true
          title: Company name
          maxLength: 255
      required:
      - email
      - first_name
      - id
      - last_name
      - password
    PasswordResetConfirmRetype:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
        re_new_password:
          type: string
      required:
      - new_password
      - re_new_password
      - token
      - uid
    PatchedUserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        job_title:
          type: string
          nullable: true
          maxLength: 255
        company:
          type: string
          nullable: true
          title: Company name
          maxLength: 255
    PatchedZlide:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        presentation_data: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
    ProviderAuth:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
      required:
      - access
      - refresh
      - user
    RatingEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Testimonial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
        rating:
          allOf:
          - $ref: '#/components/schemas/RatingEnum'
          minimum: -2147483648
          maximum: 2147483647
        created_date:
          type: string
          format: date-time
          readOnly: true
        updated_date:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
          nullable: true
      required:
      - created_date
      - id
      - rating
      - review
      - updated_date
    UserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        job_title:
          type: string
          nullable: true
          maxLength: 255
        company:
          type: string
          nullable: true
          title: Company name
          maxLength: 255
      required:
      - email
      - first_name
      - id
      - last_name
      - password
    UserCreatePasswordRetype:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        job_title:
          type: string
          nullable: true
          maxLength: 255
        company:
          type: string
          nullable: true
          title: Company name
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - email
      - first_name
      - id
      - last_name
      - password
      - re_password
    Zlide:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        presentation_data: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - presentation_data
